#!/bin/bash
#
# Version 0.0.2 - Jan/2009
# Changes: added device verification
#          
# by Thiago Varela - thiago@iplenix.com
#
# --------------------------------------
#
# Version 0.0.3 - Dec/2011
# Changes: 
#  - changed values from bytes to mbytes
#  - fixed bug to get traffic data without comma but point
#  - current values are displayed now, not average values (first run of iostat)
#
# by Philipp Niedziela - pn@pn-it.com
# 
# --------------------------------------
# Version 0.0.4 - Apr/2012
# Changes:
#  - /bin/echo -e is required
#  - sh does not know the function prefix
#  - further errors, change interpreter to bash
#
# by Michael Friedrich - michael.friedrich@univie.ac.at
#
# --------------------------------------
# Version 0.0.5 - Feb/2018
# Changes:
#  - Allow d to be a symlink in order to allow checking disks by UUID
#
# by Maximilian Falkenstein - mfalkenstein@sos.ethz.ch
#
# --------------------------------------
# Version 0.0.6 - May/2020
# Changes:
#  - Fix some shellcheck warnings
#  - Use JSON output of iostat and parse it with jq
#
# by Peter Keresztes Schmidt - peterke@sos.ethz.ch
#

iostat=$(which iostat 2>/dev/null)
bc=$(which bc 2>/dev/null)
jq=$(which jq 2>/dev/null)

help () {
/bin/echo -e "\n\tThis plugin shows the I/O usage of the specified disk, using the iostat external program.\n\tIt prints three statistics: Transactions per second (tps), Kilobytes per second\n\tread from the disk (KB_read/s) and and written to the disk (KB_written/s)\n\n$0:\n\t-d <disk>\t\tDevice to be checked (without the full path, eg. sda)\n\t-c <tps>,<read>,<wrtn>\tSets the CRITICAL level for tps, KB_read/s and KB_written/s, respectively\n\t-w <tps>,<read>,<wrtn>\tSets the WARNING level for tps, KB_read/s and KB_written/s, respectively\n"
	exit 3
}

# Ensuring we have the needed tools:
{ [ ! -f "$iostat" ] || [ ! -f "$bc" ] || [ ! -f "$jq" ]; } && \
	echo -e "ERROR: You must have iostat, bc and jq installed in order to run this plugin\n" && exit 3

# Getting parameters:
while getopts "d:w:c:h" OPT; do
	case $OPT in
		"d") disk=$OPTARG;;
		"w") warning=$OPTARG;;
		"c") critical=$OPTARG;;
		"h") help;;
		*) ;;
	esac
done
# Adjusting the three warn and crit levels:
crit_tps=$(echo "$critical" | cut -d, -f1)
crit_read=$(echo "$critical" | cut -d, -f2)
crit_written=$(echo "$critical" | cut -d, -f3)

warn_tps=$(echo "$warning" | cut -d, -f1)
warn_read=$(echo "$warning" | cut -d, -f2)
warn_written=$(echo "$warning" | cut -d, -f3)


# Checking parameters:
[ ! -b "/dev/$disk" ] && echo "ERROR: Device incorrectly specified" && help

# Disks might be passed by UUID, resolve symlink if necessary
if [ -h "/dev/$disk" ] ; then
	disk=$(readlink -f "/dev/$disk" | sed 's/\/dev\///g')
fi

{ [ "$warn_tps" == "" ] || [ "$warn_read" == "" ] || [ "$warn_written" == "" ] || \
  [ "$crit_tps" == "" ] || [ "$crit_read" == "" ] || [ "$crit_written" == "" ]; } &&
	echo "ERROR: You must specify all warning and critical levels" && help

{ [[ "$warn_tps" -ge  "$crit_tps" ]] || \
  [[ "$warn_read" -ge  "$crit_read" ]] || \
  [[ "$warn_written" -ge  "$crit_written" ]]; } && \
  echo "ERROR: critical levels must be highter than warning levels" && help

iostat_out=$($iostat "$disk" -m -d -y 1 1 -o JSON)

tps="$(echo "$iostat_out" | $jq '.sysstat.hosts[0].statistics[0].disk[0].tps')"
read="$(echo "$iostat_out" | $jq '.sysstat.hosts[0].statistics[0].disk[0]."MB_wrtn/s"')"
written="$(echo "$iostat_out" | $jq '.sysstat.hosts[0].statistics[0].disk[0]."MB_read/s"')"

# Comparing the result and setting the correct level:
if [ "$(echo "$tps >= $crit_tps" | bc)" == "1" ] || [ "$(echo "$read >= $crit_read" | bc -q)" == "1" ] || \
   [ "$(echo "$written >= $crit_written" | bc)" == "1" ]; then
    msg="CRITICAL"
    status=2
elif [ "$(echo "$tps >= $warn_tps" | bc)" == "1" ] || [ "$(echo "$read >= $warn_read" | bc)" == "1" ] || \
     [ "$(echo "$written >= $warn_written" | bc)" == "1" ]; then
    msg="WARNING"
    status=1
else
    msg="OK"
    status=0
fi

# Printing the results:
echo "$msg - I/O stats tps=$tps MB_read/s=$read MB_written/s=$written | 'tps'=$tps; 'MB_read/s'=$read; 'MB_written/s'=$written;"

exit $status
